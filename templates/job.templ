package templates

import (
	"time"

	"github.com/forkd4x/cronic/models"
)

func getStatusClass(status string) string {
	switch status {
	case "Pending":
		return "bg-light text-secondary"
	case "Running":
		return "text-primary"
	case "Success":
		return "bg-success bg-opacity-10 text-success"
	case "Warning":
		return "bg-warning bg-opacity-10 text-warning"
	case "Error":
		return "bg-danger bg-opacity-10 text-danger"
	default:
		return ""
	}
}

func formatTime(t *time.Time) string {
	if t == nil {
		return ""
	}
	return t.Format("01/02/2006 15:04:05")
}

func formatDuration(job models.Job) string {
	if job.Status == "Running" {
		duration := time.Since(*job.LastRun)
		job.Duration = &duration
	}
	if job.Duration == nil {
		return ""
	}
	return time.Unix(0, 0).UTC().Add(*job.Duration).Format("15:04:05")
}

templ Job(job models.Job) {
	<tr sse-swap={ job.ID } hx-swap="outerHTML">
		<td>{ job.Name }</td>
		<td>{ job.CronHuman() }</td>
		<td>{ formatTime(job.LastRun) }</td>
		<td class="text-center">{ formatDuration(job) }</td>
		<td class={ getStatusClass(job.Status) }>{ job.Status }</td>
		<td>{ formatTime(job.NextRun) }</td>
	</tr>
}
